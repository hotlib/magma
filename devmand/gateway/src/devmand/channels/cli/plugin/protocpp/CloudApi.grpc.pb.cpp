// Generated by the gRPC protobuf plugin.
// If you make any local change, they will be lost.
// source: CloudApi.proto

#include "CloudApi.grpc.pb.h"
#include "CloudApi.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace devmand {
namespace channels {
namespace cli {
namespace cloudapi {

static const char* DataReceiver_method_names[] = {
    "/devmand.channels.cli.cloudapi.DataReceiver/sendData",
};

std::unique_ptr<DataReceiver::Stub> DataReceiver::NewStub(
    const std::shared_ptr<::grpc::ChannelInterface>& channel,
    const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr<DataReceiver::Stub> stub(new DataReceiver::Stub(channel));
  return stub;
}

DataReceiver::Stub::Stub(
    const std::shared_ptr<::grpc::ChannelInterface>& channel)
    : channel_(channel),
      rpcmethod_sendData_(
          DataReceiver_method_names[0],
          ::grpc::RpcMethod::NORMAL_RPC,
          channel) {}

::grpc::Status DataReceiver::Stub::sendData(
    ::grpc::ClientContext* context,
    const ::devmand::channels::cli::cloudapi::DataRequest& request,
    ::google::protobuf::Empty* response) {
  return ::grpc::BlockingUnaryCall(
      channel_.get(), rpcmethod_sendData_, context, request, response);
}

::grpc::ClientAsyncResponseReader<::google::protobuf::Empty>*
DataReceiver::Stub::AsyncsendDataRaw(
    ::grpc::ClientContext* context,
    const ::devmand::channels::cli::cloudapi::DataRequest& request,
    ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader<::google::protobuf::Empty>(
      channel_.get(), cq, rpcmethod_sendData_, context, request);
}

DataReceiver::Service::Service() {
  (void)DataReceiver_method_names;
  AddMethod(new ::grpc::RpcServiceMethod(
      DataReceiver_method_names[0],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler<
          DataReceiver::Service,
          ::devmand::channels::cli::cloudapi::DataRequest,
          ::google::protobuf::Empty>(
          std::mem_fn(&DataReceiver::Service::sendData), this)));
}

DataReceiver::Service::~Service() {}

::grpc::Status DataReceiver::Service::sendData(
    ::grpc::ServerContext* context,
    const ::devmand::channels::cli::cloudapi::DataRequest* request,
    ::google::protobuf::Empty* response) {
  (void)context;
  (void)request;
  (void)response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

} // namespace cloudapi
} // namespace cli
} // namespace channels
} // namespace devmand
